name: "CD - API Hexburger"
description: "Publicar artefato da API Hexburger no ECR"
inputs:
  aws_access_key_id:
    description: "ID da chave de acesso da AWS"
    required: true
  aws_secret_access_key:
    description: "Chave de acesso secreta da AWS"
    required: true
  aws_session_token:
    description: "Token de sessão da AWS"
    required: true
  aws_region:
    description: "Região da AWS"
    required: true
  aws_account_id:
    description: "ID da conta da AWS"
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ inputs.AWS_SESSION_TOKEN }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registries: ${{ inputs.AWS_ACCOUNT_ID }}

    - name: Build, tag, and push image to Amazon ECR.
      id: build-publish
      shell: bash
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

        IMAGE_TAG: ${{ github.run_number }}
      run: |

        docker build -t "$ECR_REPOSITORY" .
        docker tag "$ECR_REPOSITORY:latest" "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
        echo "image_tag=$IMAGE_TAG" 
        echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
